#!/bin/bash

echo "use proxy/noproxy for http(s) proxy on/off, -e to create fake EventTransferStatus to play with events, and -g [groupslist|restore|as|add|set] to manage groups list"

if [[ $1 == "proxy" ]]
then
    export http_proxy=http://webproxy.corp.booking.com
    export https_proxy=https://webproxy.corp.booking.com
    export ftp_proxy=https://webproxy.corp.booking.com
fi

if [[ $1 == "noproxy" ]]
then
    unset http_proxy
    unset https_proxy
    unset ftp_proxy
fi

if [[ $1 == "-e" ]]
then
    echo "Creating fake EventTransferStatus table in office"
    mysqly --silent office -e 'CREATE TABLE IF NOT EXISTS `EventTransferStatus` ( `class_name` char(64) NOT NULL,  `epoch` int(10) UNSIGNED NOT NULL, `last_change` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP, PRIMARY KEY (`class_name`)) ENGINE=InnoDB DEFAULT CHARSET=latin1;'
fi

if [[ $1 == "-g" ]]
then
    groups=`mysqly office --skip-column-names -e "SELECT groups FROM Staff WHERE loginname='$USER' LIMIT 1"`
    echo "Current $USER groups: $groups"
    if [[ -z "$2" ]]
        then
        echo "Adding a bunch of groups for myself"
        mysqly --silent -m rw office -e "UPDATE Staff SET groups='CS_read,PO_access,affadmin,afffull,atrans,cc_view,ed_commission,experiment_modify,experiment_stats,login_admin,ops,pas,pas_cs,pas_rw,pas_signup,security_tools,sox_reports,financeread' WHERE loginname='$USER';"
    fi
    if [[ $2 == "restore" ]]
        then
        echo "Restoring Staff table from backup"
        mysqly --sync-to-dev office.Staff
    fi
    if [[ $2 == "am" ]]
        then
        uid=`mysqly office --skip-column-names -e "SELECT id FROM Staff WHERE loginname='$USER' LIMIT 1"`
        uname=`mysqly office --skip-column-names -e "SELECT name FROM Staff WHERE loginname='$USER' LIMIT 1"`
        amid=`mysqly  bp --skip-column-names -e "SELECT account_id FROM B_Partner p WHERE p.id='$3' LIMIT 1"`
        echo "Setting $USER ($uid/$uname) AM ($amid) for $3"
        mysqly -m rw office -e "UPDATE Staff SET groups='hadmin' WHERE loginname='$USER';"
        mysqly -m rw bp -e "UPDATE PAS_Account SET staff_id=$uid, name='$uname' WHERE id=$amid;"
    fi
    if [[ $2 == "as" ]]
        then
        groups=`mysqly  office --skip-column-names -e "SELECT groups FROM Staff WHERE loginname='$3' LIMIT 1"`
        echo "Setting $USER groups as for $3 ($groups)"
        mysqly -m rw office -e "UPDATE Staff SET groups='$groups' WHERE loginname='$USER';"
    fi
    if [[ $2 == "add" ]]
        then
        groups=`mysqly  office --skip-column-names -e "SELECT groups FROM Staff WHERE loginname='$USER' LIMIT 1"`
        echo "Adding group $3 to $USER groups ($groups)"
        mysqly -m rw office -e "UPDATE Staff SET groups='$groups,$3' WHERE loginname='$USER'"
    fi
    if [[ $2 == "set" ]]
        then
        echo "Setting group $3 as the only $USER group"
        mysqly -m rw office -e "UPDATE Staff SET groups='$3' WHERE loginname='$USER'"
    fi
fi
